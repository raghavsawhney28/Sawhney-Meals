{"ast":null,"code":"import _slicedToArray from\"C:/React/Sawhney Meals/Sawhney Meals/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useRef,useState}from\"react\";import classes from\"./Checkout.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()===\"\";};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,postalCode:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setFormInputsValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var postalCodeInputRef=useRef();var cityInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostalCode=postalCodeInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredCityIsValid=!isEmpty(enteredCity);var enteredPostalCodeIsValid=isFiveChars(enteredPostalCode);setFormInputsValidity({name:enteredCityIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,postalCode:enteredPostalCodeIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredCityIsValid&&enteredPostalCodeIsValid;if(formIsValid){return;}props.onConfirm({name:enteredName,street:enteredCity,city:enteredCity,postalCode:enteredPostalCode});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.name?\"\":classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.street?\"\":classes.invalid);var postalCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.postalCode?\"\":classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.city?\"\":classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid street!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postalCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"postal\",children:\"Postal Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"postal\",ref:postalCodeInputRef}),!formInputsValidity.postalCode&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid postalcode (5 character long)!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid city!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"names":["useRef","useState","classes","jsx","_jsx","jsxs","_jsxs","isEmpty","value","trim","isFiveChars","length","Checkout","props","_useState","name","street","city","postalCode","_useState2","_slicedToArray","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postalCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","onConfirm","nameControlClasses","concat","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","className","form","onSubmit","children","htmlFor","type","id","ref","actions","onClick","onCancel","submit"],"sources":["C:/React/Sawhney Meals/Sawhney Meals/src/components/Cart/Checkout.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isFiveChars = (value) => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    postalCode: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalCodeInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostalCode = postalCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode);\r\n\r\n    setFormInputsValidity({\r\n      name: enteredCityIsValid,\r\n      street: enteredStreetIsValid,\r\n      city: enteredCityIsValid,\r\n      postalCode: enteredPostalCodeIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      enteredNameIsValid &&\r\n      enteredStreetIsValid &&\r\n      enteredCityIsValid &&\r\n      enteredPostalCodeIsValid;\r\n\r\n    if (formIsValid) {\r\n      return;\r\n    }\r\n    props.onConfirm({\r\n        name: enteredName,\r\n        street: enteredCity,\r\n        city: enteredCity,\r\n        postalCode: enteredPostalCode\r\n    }\r\n    );\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formInputsValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    formInputsValidity.street ? \"\" : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formInputsValidity.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formInputsValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div\r\n        className={nameControlClasses}\r\n      >\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n        {!formInputsValidity.street && <p>Please enter a valid street!</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"postal\">Postal Code</label>\r\n        <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n        {!formInputsValidity.postalCode && (\r\n          <p>Please enter a valid postalcode (5 character long)!</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n        {!formInputsValidity.city && <p>Please enter a valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}